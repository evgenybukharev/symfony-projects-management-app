version: '3'

services:
    nginx:
        build:
            context: docker/dev/nginx
            dockerfile: Dockerfile
        volumes:
            - ./:/app
        ports:
            - 8080:80
        depends_on:
            - php-fpm
            - redis

    php-fpm:
        build:
            context: docker/dev/php-fpm
            dockerfile: Dockerfile
        volumes:
            - ./:/app
        environment:
            STORAGE_FTP_HOST: ${STORAGE_FTP_HOST}
            STORAGE_FTP_USERNAME: ${STORAGE_FTP_USERNAME}
            STORAGE_FTP_PASSWORD: ${STORAGE_FTP_PASSWORD}
        depends_on:
            - postgres
            - mailer
            - redis
            - storage

    php-cli:
        build:
            context: docker/dev/php-cli
            dockerfile: Dockerfile
        volumes:
            - ./:/app
            - composer:/root/.composer/cache
        tty: true
        environment:
            STORAGE_FTP_HOST: ${STORAGE_FTP_HOST}
            STORAGE_FTP_USERNAME: ${STORAGE_FTP_USERNAME}
            STORAGE_FTP_PASSWORD: ${STORAGE_FTP_PASSWORD}
        depends_on:
            - postgres
            - mailer
            - redis
            - storage

    postgres:
        image: postgres:11.2-alpine
        volumes:
            - postgres:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: app
            POSTGRES_PASSWORD: secret
            POSTGRES_DB: app
        ports:
            - 54321:5432

    redis:
        image: redis:3.0-alpine
        volumes:
            - redis:/data

    mailer:
        image: mailhog/mailhog
        ports:
            - 8026:8025

    node:
        image: node:11.13-alpine
        volumes:
            - ./:/app
        working_dir: /app
        tty: true

    node-watcher:
        image: node:11.13-alpine
        volumes:
            - ./:/app
        working_dir: /app
        command: sh -c "yarn install && yarn watch"

    storage:
        build:
            context: ./docker/dev/storage
            dockerfile: Dockerfile
        volumes:
            - ./storage:/app
        ports:
            - "8081:80"

    storage-ftp:
        image: stilliard/pure-ftpd
        environment:
            FTP_USER_NAME: app
            FTP_USER_PASS: secret
            FTP_USER_HOME: /app
        volumes:
            - ./storage:/app

volumes:
    postgres:
        driver: local
    redis:
        driver: local
    composer:
        driver: local
